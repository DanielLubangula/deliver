<style>
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #1e2a3a;
    color: #ffffff;
}

.header {
    background-color: #2c3e50;
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap; /* Ajout pour gérer les petits écrans */
}

.logo {
    font-size: 1.5rem;
    font-weight: bold;
    color: #5ce1e6;
}

.login-btn {
    background-color: #5ce1e6;
    color: #1e2a3a;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
}

.container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1rem;
}

.content-box,
.satisfaction-box,
.form-container {
    background-color: #34495e;
    border-radius: 10px;
    padding: 1.5rem;
    margin-bottom: 1rem;
}

.satisfaction-box {
    background-color: #2c3e50;
    text-align: center;
}

.satisfaction-icon {
    font-size: 2rem;
    margin-bottom: 1rem;
}

.cta-button {
    background-color: #5ce1e6;
    color: #1e2a3a;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    font-size: 1rem;
    margin-top: 1rem;
}

.form-container {
    max-width: 400px;
    margin: 2rem auto;
}

.form-title {
    text-align: center;
    margin-bottom: 1.5rem;
    color: #5ce1e6;
}

.form-input {
    width: 100%;
    padding: 0.75rem;
    margin-bottom: 1rem;
    border: 1px solid #5ce1e6;
    border-radius: 5px;
    background-color: #2c3e50;
    color: #ffffff;
}

.form-submit {
    width: 100%;
    background-color: #5ce1e6;
    color: #1e2a3a;
    border: none;
    padding: 0.75rem;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    font-size: 1rem;
}

.form-toggle {
    text-align: center;
    margin-top: 1rem;
}

.form-toggle a {
    color: #5ce1e6;
    text-decoration: none;
}

.messageErrorConn,
.messageErrorInsc {
    text-align: center;
    color: rgb(190, 91, 91);
    text-shadow: 0px 0px 1px rgb(5, 5, 5);
}

.google-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    border-radius: 4px;
    padding: 12px 24px;
    cursor: pointer;
    transition: all 0.3s ease;
    width: 100%;
    margin-top: 20px;
}

.google-btn:hover {
    background: #5ce1e6;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.google-icon {
    width: 24px;
    height: 24px;
}

/* MEDIA QUERIES POUR RESPONSIVE DESIGN */
@media (max-width: 768px) {
   
    .header {
        flex-direction: column;
        text-align: center;
    }

    .logo {
        margin-bottom: 1rem;
    }

    .container {
        padding: 0 0.5rem;
    }

    .form-container {
        max-width: 90%;
        padding: 1rem;
    }

    .content-box,
    .satisfaction-box {
        padding: 1rem;
    }

    .cta-button {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
    }
}

@media (max-width: 480px) {

    .form-container{

        font-size: 0.8rem;
    }
    .form-toggle{
        font-size: 0.8rem;
    }

    .form-title {
        font-size: 1.2rem;
    }

    .form-input {
        padding: 0.5rem;
        font-size: 0.9rem;
    }

    .form-submit {
        padding: 0.5rem;
        font-size: 0.9rem;
    }

    .google-btn {
        padding: 10px 20px;
        font-size: 0.8rem;
    }

    .google-icon {
        width: 20px;
        height: 20px;
    }
}

</style>
</head>

    <div class="container">
        <div class="form-container">
            <h2 class="form-title">Connexion</h2>
            <form id="loginForm">
            <input class="form-input t" type="email" name="email" placeholder="Email" required>
            <input class="form-input t" type="password" name="password" placeholder="Mot de passe" required>
            <p class="messageErrorConn"></p>
            <button class="form-submit" type="submit">Se connecter</button>
            </form>
            <p>
                {{!-- <a href="/deliver/forgotPassword" class="forgot-password-link">Mot de passe oublié ?</a> --}}
            </p>


         <button onclick="window.location.href='/auth/google'" class="google-btn">
            <svg class="google-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                <path fill="#EA4335" d="M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z"/>
                <path fill="#4285F4" d="M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z"/>
                <path fill="#FBBC05" d="M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z"/>
                <path fill="#34A853" d="M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z"/>
            </svg>
            Continuer avec Google
        </button>
    
            <div class="form-toggle">
                Pas encore inscrit ? <a href="#" onclick="toggleForm()"> Créer un compte</a>
            </div>
        </div>

        <div class="form-container" style="display: none;">
        <h2 class="form-title">Inscription</h2>
        <form id="signupForm">
            <input class="form-input i" type="text" name="username" placeholder="Nom d'utilisateur" required>
            <input class="form-input i" type="email" name="email" placeholder="Email" required>
            <input class="form-input i" type="password" name="password" placeholder="Mot de passe" required>
            <input class="form-input i" type="password" name="confirmPassword" placeholder="Confirmer le mot de passe" required>
            <button class="form-submit" type="submit">S'inscrire</button>
        </form>
        <p class="messageErrorInsc"></p>

        <!-- Bouton pour continuer avec Google -->
        <button onclick="window.location.href='/auth/google'" class="google-btn">
        <svg class="google-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
            <path fill="#EA4335" d="M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z"/>
            <path fill="#4285F4" d="M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z"/>
            <path fill="#FBBC05" d="M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z"/>
            <path fill="#34A853" d="M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z"/>
        </svg>
        Continuer avec Google
        </button>


            <div class="form-toggle">
                Déjà inscrit ? <a href="#" onclick="toggleForm()"> Se connecter</a>
            </div>
        </div>
    </div>

<!-- Ton script client -->
<script>
    // Requêtte pour acheminés le données vers le serveur pour l'inscription
    const form = document.getElementById("signupForm");
  const messageErrorInsc = document.querySelector(".messageErrorInsc");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Récupérer les données du formulaire
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);

    try {
      // Envoyer les données via fetch
      const response = await fetch("/deliver/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      if (!response.ok) {
        // Afficher les erreurs

        messageErrorInsc.textContent = result.errors || "Erreur inconnue.";
      } else {
        // Rediriger ou effectuer une action en cas de succès
        window.location.href = "/deliver/";
      }
    } catch (error) {
      console.error("Erreur lors de l'envoi des données :", error);
      messageErrorInsc.textContent = "Une erreur interne s'est produite.";
    }
  });

  // Requêtte pour la connexion
  const loginForm = document.getElementById("loginForm");
  const messageErrorConn = document.querySelector(".messageErrorConn");

  loginForm.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Récupérer les données du formulaire
    const formData = new FormData(loginForm);
    const data = Object.fromEntries(formData);

    try {
      // Envoyer les données au serveur via fetch
      const response = await fetch("/deliver/login", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      if (!response.ok) {
        // Afficher les erreurs
        messageErrorConn.textContent = result.errors || "Erreur inconnue.";
      } else {
        // Rediriger en cas de succès
        window.location.href = "/deliver/";
      }
    } catch (error) {
      console.error("Erreur lors de la connexion :", error);
      messageErrorConn.textContent = "Une erreur interne s'est produite.";
    }
  });


    function toggleForm() {
        const forms = document.querySelectorAll('.form-container');
        forms.forEach(form => {
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        });
    }
</script>
